/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    base
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    id("org.jetbrains.kotlin.jvm")
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

dependencies {
    constraints {
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk15")
        implementation("io.vertx:vertx-core:4.0.3")
        implementation("io.vertx:vertx-web:4.0.3")
        implementation("io.vertx:vertx-lang-kotlin:4.0.3")

        implementation("com.github.fge:json-schema-validator:2.2.6")
        implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.12.4")

        implementation("io.swagger.codegen.v3:swagger-codegen-cli:3.0.26")
        implementation("org.webjars:swagger-ui:3.10.0")

        testImplementation("io.vertx:vertx-junit5:4.0.3")
        testImplementation("io.vertx:vertx-web-client:4.0.3")
    }

    // Align versions of all Kotlin components
    implementation(platform("org.jetbrains.kotlin:kotlin-bom"))

    // Use the Kotlin JDK 8 standard library.
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

    // Align versions of all Kotlin components
    implementation(platform("org.jetbrains.kotlin:kotlin-bom"))

    // Use JUnit Jupiter API for testing.
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.6.2")

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
}

tasks {
    withType<org.jetbrains.kotlin.gradle.tasks.KotlinCompile> {
        kotlinOptions {
            jvmTarget = "15"
        }
    }

    // Remove timestamps and always use same file order in jars to make builds reproducible
    withType<AbstractArchiveTask>().configureEach {
        isPreserveFileTimestamps = false
        isReproducibleFileOrder = true
    }

    test {
        // Use junit platform for unit tests.
        useJUnitPlatform()
    }
}